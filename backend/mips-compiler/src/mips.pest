whitespace = _{" " | "\t"}
newline = _{"\r\n" | "\n"}
non_newline = _{ !newline ~ any }
alpha = {'a'..'z' | 'A'..'Z'}
num = {'0'..'9' | 'A' .. 'F' | 'a'..'f'}
hex_num = {("0x" | "0X") ~ num+}
dec_num = {!"0x" ~ num+}
alpha_num = { alpha | num }
name = {alpha ~ alpha_num*}
comment = _{"#" ~ non_newline*}
register = {"$zero" | ("$" ~ alpha ~ alpha_num) }
opcode = {alpha+}
i_label = {alpha ~ alpha_num*}
immediate = {i_label | hex_num | dec_num }
jump_target = {alpha+ | (("0x" | "0X")? ~ num+)}
r_instruction = { (opcode ~ register ~ "," ~ register ~ "," ~ register) | (opcode ~ register) }
i_instruction = { opcode ~ register ~ "," ~ register ~ "," ~ immediate }
j_opcode = {"jal" | (!"jr"~"j")} // ugly, ugly hack because things weren't working using "opcode"
j_instruction = { j_opcode ~ jump_target }
mem_instruction = { opcode ~ register ~ "," ~ (hex_num | dec_num) ~ "(" ~ register ~ ")" }
lui = {"lui" ~ register ~ "," ~ (hex_num | dec_num)}
nop = {"nop"}
instruction = { lui | mem_instruction | j_instruction | i_instruction | r_instruction | nop}
label = { alpha_num+ ~ ":" }
line = _{(label)? ~ (instruction)?  ~ (comment)?}
program = { soi ~ (line? ~ newline)* ~ eoi }
