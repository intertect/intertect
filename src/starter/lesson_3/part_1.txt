function ToUint32(x) {
  return x >>> 0;
}

function fetch(registers, memory) {
console.log("FUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUCK")
  var fetchLocation = registers.read(nameToRegisterMap["$pc"]);
console.log("BITCH")
  var binary = fetch(fetchLocation, memory);

  var byte_1 = memory.read(location);
  var byte_2 = memory.read(location + 1);
  var byte_3 = memory.read(location + 2);
  var byte_4 = memory.read(location + 3);

  var binary = byte_4;
  binary |= byte_3 << 8;
  binary |= byte_2 << 16;
  binary |= byte_1 << 24;

  return binary;
}

function processMIPS(registers, memory) {
var fetchLocation = registers.read(nameToRegisterMap["$pc"]);
console.log("FUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUCK")
console.log(fetchLocation)
  var binary = fetch(registers, memory);

  /* ------------------------------------------------------------------------ */
  // We've already implemented the functions below this line for you! You'll be
  // doing these in the following lessons
  /* ------------------------------------------------------------------------ */
  var instruction = decode(binary);
  var [writeLocation, position, result] = execute(instruction, registers, memory);
  write(writeLocation, position, result);
}

var functMap = {
  0x20: "add",
  0x21: "addu",
  0x22: "sub",
  0x23: "subu",
  0x24: "and",
  0x25: "or",
  0x27: "nor",
  0x26: "xor",
  0x00: "sll",
  0x02: "srl",
  0x03: "sra",
  0x08: "jr",
};

var opcodeMap = {
  0x08: "addi",
  0x09: "addiu",
  0x0c: "andi",
  0x0d: "ori",
  0x0e: "xori",
  0x24: "lbu",
  0x25: "lhu",
  0x23: "lw",
  0x0f: "lui",
  0x28: "sb",
  0x29: "sh",
  0x2b: "sw",
  0x04: "beq",
};

var nameToRegisterMap = {
  "$zero" : 0x0,
  "$at" : 0x1,
  "$v0" : 0x2,
  "$v1" : 0x3,
  "$a0" : 0x4,
  "$a1" : 0x5,
  "$a2" : 0x6,
  "$a3" : 0x7,
  "$t0" : 0x8,
  "$t1" : 0x9,
  "$t2" : 0xa,
  "$t3" : 0xb,
  "$t4" : 0xc,
  "$t5" : 0xd,
  "$t6" : 0xe,
  "$t7" : 0xf,
  "$s0" : 0x10,
  "$s1" : 0x11,
  "$s2" : 0x12,
  "$s3" : 0x13,
  "$s4" : 0x14,
  "$s5" : 0x15,
  "$s6" : 0x16,
  "$s7" : 0x17,
  "$t8" : 0x18,
  "$t9" : 0x19,
  "$k0" : 0x1a,
  "$k1" : 0x1b,
  "$gp" : 0x1c,
  "$sp" : 0x1d,
  "$fp" : 0x1e,
  "$ra" : 0x1f,
  "$pc" : 0x20
};
